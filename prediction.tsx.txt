import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Slider } from "@/components/ui/slider";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Checkbox } from "@/components/ui/checkbox";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { z } from "zod";
import { RefreshCw, Settings } from "lucide-react";
import { useEffect, useRef, useState } from "react";
import Chart from "chart.js/auto";

const formSchema = z.object({
  subject: z.string().min(1, { message: "Please select a subject" }),
  testType: z.string().min(1, { message: "Please select a test type" }),
  studyHours: z.number().min(0).max(50),
  studyMethod: z.enum(["solo", "group", "tutor"]),
  factors: z.array(z.string()).optional(),
});

type PredictionFormValues = z.infer<typeof formSchema>;

export default function Prediction() {
  const [showResults, setShowResults] = useState(false);
  const accuracyChartRef = useRef<HTMLCanvasElement>(null);
  
  const defaultValues: Partial<PredictionFormValues> = {
    subject: "",
    testType: "",
    studyHours: 20,
    studyMethod: "solo",
    factors: [],
  };

  const form = useForm<PredictionFormValues>({
    resolver: zodResolver(formSchema),
    defaultValues,
  });

  const onSubmit = (values: PredictionFormValues) => {
    console.log(values);
    setShowResults(true);
  };

  useEffect(() => {
    if (accuracyChartRef.current) {
      const ctx = accuracyChartRef.current.getContext('2d');
      
      if (ctx) {
        // Destroy existing chart if it exists
        const existingChart = Chart.getChart(accuracyChartRef.current);
        if (existingChart) {
          existingChart.destroy();
        }
        
        new Chart(ctx, {
          type: 'doughnut',
          data: {
            labels: ['Within Prediction Range', 'Outside Prediction Range'],
            datasets: [{
              data: [93, 7],
              backgroundColor: ['#4F46E5', '#E5E7EB']
            }]
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                position: 'bottom'
              }
            }
          }
        });
      }
    }
  }, [showResults]);
  
  // Past predictions data
  const pastPredictions = [
    { subject: "Mathematics", time: "2 weeks ago", predicted: "82-88%", actual: "85%", success: true },
    { subject: "Physics", time: "1 month ago", predicted: "75-83%", actual: "74%", success: false },
    { subject: "Computer Science", time: "2 months ago", predicted: "88-94%", actual: "91%", success: true }
  ];

  return (
    <>
      {/* Header */}
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8 flex justify-between items-center">
          <h1 className="text-2xl font-bold text-gray-900">AI Grade Predictor</h1>
          <div className="flex space-x-4">
            <Button variant="default" size="sm" className="inline-flex items-center">
              <RefreshCw className="mr-2 h-4 w-4" />
              Sync Data
            </Button>
            <Button variant="outline" size="sm" className="inline-flex items-center">
              <Settings className="mr-2 h-4 w-4" />
              Settings
            </Button>
          </div>
        </div>
      </header>

      <div className="flex-1 py-6 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <Card className="shadow-md rounded-lg overflow-hidden">
            <div className="relative h-40 overflow-hidden">
              <img 
                src="https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=300&q=80" 
                alt="AI learning technology"
                className="w-full h-full object-cover"
              />
              <div className="absolute inset-0 bg-gradient-to-r from-gray-900/70 to-indigo-900/70"></div>
              <div className="absolute inset-0 flex items-center px-8">
                <div className="text-white">
                  <h2 className="text-2xl font-bold mb-2">AI Grade Predictor</h2>
                  <p className="text-lg opacity-90">Leverage AI to predict your future academic performance</p>
                </div>
              </div>
            </div>
            
            <CardContent className="p-6">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="col-span-1 md:col-span-2">
                  <div className="bg-gray-50 p-6 rounded-lg">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">Predict Your Future Grades</h3>
                    <p className="text-gray-600 mb-6">Our AI analyzes your past performance, study habits, and comparison with similar students to predict your future grades.</p>
                    
                    <Form {...form}>
                      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-5">
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                          <FormField
                            control={form.control}
                            name="subject"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Subject</FormLabel>
                                <Select 
                                  onValueChange={field.onChange} 
                                  defaultValue={field.value}
                                >
                                  <FormControl>
                                    <SelectTrigger>
                                      <SelectValue placeholder="Select Subject" />
                                    </SelectTrigger>
                                  </FormControl>
                                  <SelectContent>
                                    <SelectItem value="math">Mathematics</SelectItem>
                                    <SelectItem value="physics">Physics</SelectItem>
                                    <SelectItem value="chemistry">Chemistry</SelectItem>
                                    <SelectItem value="biology">Biology</SelectItem>
                                    <SelectItem value="compsci">Computer Science</SelectItem>
                                  </SelectContent>
                                </Select>
                                <FormMessage />
                              </FormItem>
                            )}
                          />
                          
                          <FormField
                            control={form.control}
                            name="testType"
                            render={({ field }) => (
                              <FormItem>
                                <FormLabel>Test Type</FormLabel>
                                <Select 
                                  onValueChange={field.onChange} 
                                  defaultValue={field.value}
                                >
                                  <FormControl>
                                    <SelectTrigger>
                                      <SelectValue placeholder="Select Test Type" />
                                    </SelectTrigger>
                                  </FormControl>
                                  <SelectContent>
                                    <SelectItem value="midterm">Midterm Exam</SelectItem>
                                    <SelectItem value="final">Final Exam</SelectItem>
                                    <SelectItem value="quiz">Quiz</SelectItem>
                                    <SelectItem value="project">Project</SelectItem>
                                  </SelectContent>
                                </Select>
                                <FormMessage />
                              </FormItem>
                            )}
                          />
                        </div>
                        
                        <FormField
                          control={form.control}
                          name="studyHours"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>Expected Study Hours</FormLabel>
                              <FormControl>
                                <Slider
                                  min={0}
                                  max={50}
                                  step={1}
                                  defaultValue={[field.value]}
                                  onValueChange={(vals) => {
                                    field.onChange(vals[0]);
                                  }}
                                  className="pt-5 pb-10"
                                />
                              </FormControl>
                              <div className="flex justify-between text-xs text-gray-500 px-2 mt-1">
                                <span>0h</span>
                                <span>10h</span>
                                <span>20h</span>
                                <span>30h</span>
                                <span>40h</span>
                                <span>50h+</span>
                              </div>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                          <FormField
                            control={form.control}
                            name="studyMethod"
                            render={({ field }) => (
                              <FormItem className="space-y-3">
                                <FormLabel>Study Method</FormLabel>
                                <FormControl>
                                  <RadioGroup
                                    onValueChange={field.onChange}
                                    defaultValue={field.value}
                                    className="flex flex-col space-y-1"
                                  >
                                    <FormItem className="flex items-center space-x-3 space-y-0">
                                      <FormControl>
                                        <RadioGroupItem value="solo" />
                                      </FormControl>
                                      <FormLabel className="font-normal">
                                        Solo Study
                                      </FormLabel>
                                    </FormItem>
                                    <FormItem className="flex items-center space-x-3 space-y-0">
                                      <FormControl>
                                        <RadioGroupItem value="group" />
                                      </FormControl>
                                      <FormLabel className="font-normal">
                                        Group Study
                                      </FormLabel>
                                    </FormItem>
                                    <FormItem className="flex items-center space-x-3 space-y-0">
                                      <FormControl>
                                        <RadioGroupItem value="tutor" />
                                      </FormControl>
                                      <FormLabel className="font-normal">
                                        With Tutor
                                      </FormLabel>
                                    </FormItem>
                                  </RadioGroup>
                                </FormControl>
                                <FormMessage />
                              </FormItem>
                            )}
                          />
                          
                          <FormField
                            control={form.control}
                            name="factors"
                            render={() => (
                              <FormItem>
                                <div className="mb-4">
                                  <FormLabel className="text-base">Additional Factors</FormLabel>
                                  <FormDescription>
                                    Select all that apply
                                  </FormDescription>
                                </div>
                                <div className="space-y-2">
                                  <FormField
                                    control={form.control}
                                    name="factors"
                                    render={({ field }) => {
                                      return (
                                        <FormItem className="flex flex-row items-start space-x-3 space-y-0">
                                          <FormControl>
                                            <Checkbox
                                              checked={field.value?.includes('sleep')}
                                              onCheckedChange={(checked) => {
                                                const newValue = checked
                                                  ? [...(field.value || []), 'sleep']
                                                  : field.value?.filter(
                                                      (value) => value !== 'sleep'
                                                    ) || [];
                                                field.onChange(newValue);
                                              }}
                                            />
                                          </FormControl>
                                          <FormLabel className="font-normal">
                                            Adequate Sleep
                                          </FormLabel>
                                        </FormItem>
                                      );
                                    }}
                                  />
                                  <FormField
                                    control={form.control}
                                    name="factors"
                                    render={({ field }) => {
                                      return (
                                        <FormItem className="flex flex-row items-start space-x-3 space-y-0">
                                          <FormControl>
                                            <Checkbox
                                              checked={field.value?.includes('attendance')}
                                              onCheckedChange={(checked) => {
                                                const newValue = checked
                                                  ? [...(field.value || []), 'attendance']
                                                  : field.value?.filter(
                                                      (value) => value !== 'attendance'
                                                    ) || [];
                                                field.onChange(newValue);
                                              }}
                                            />
                                          </FormControl>
                                          <FormLabel className="font-normal">
                                            Perfect Attendance
                                          </FormLabel>
                                        </FormItem>
                                      );
                                    }}
                                  />
                                  <FormField
                                    control={form.control}
                                    name="factors"
                                    render={({ field }) => {
                                      return (
                                        <FormItem className="flex flex-row items-start space-x-3 space-y-0">
                                          <FormControl>
                                            <Checkbox
                                              checked={field.value?.includes('notes')}
                                              onCheckedChange={(checked) => {
                                                const newValue = checked
                                                  ? [...(field.value || []), 'notes']
                                                  : field.value?.filter(
                                                      (value) => value !== 'notes'
                                                    ) || [];
                                                field.onChange(newValue);
                                              }}
                                            />
                                          </FormControl>
                                          <FormLabel className="font-normal">
                                            Detailed Notes
                                          </FormLabel>
                                        </FormItem>
                                      );
                                    }}
                                  />
                                </div>
                                <FormMessage />
                              </FormItem>
                            )}
                          />
                        </div>
                        
                        <div className="flex justify-end">
                          <Button type="submit">
                            Generate Prediction
                          </Button>
                        </div>
                      </form>
                    </Form>
                  </div>
                  
                  {showResults && (
                    <div className="mt-6 bg-indigo-50 p-6 rounded-lg">
                      <h3 className="text-lg font-medium text-indigo-900 mb-4">AI Prediction Results</h3>
                      
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <div className="bg-white p-4 rounded-lg shadow-sm">
                          <div className="text-center">
                            <div className="text-3xl font-bold text-indigo-600">85-92%</div>
                            <div className="text-sm text-gray-500 mt-1">Predicted Grade Range</div>
                          </div>
                        </div>
                        
                        <div className="bg-white p-4 rounded-lg shadow-sm">
                          <div className="text-center">
                            <div className="text-3xl font-bold text-green-600">87%</div>
                            <div className="text-sm text-gray-500 mt-1">Most Likely Outcome</div>
                          </div>
                        </div>
                        
                        <div className="bg-white p-4 rounded-lg shadow-sm">
                          <div className="text-center">
                            <div className="text-3xl font-bold text-blue-600">89%</div>
                            <div className="text-sm text-gray-500 mt-1">With Extra Study</div>
                          </div>
                        </div>
                      </div>
                      
                      <div className="mt-6">
                        <h4 className="font-medium text-indigo-900 mb-2">Factors Influencing Prediction</h4>
                        <ul className="space-y-2">
                          <li className="flex items-center">
                            <div className="flex-shrink-0">
                              <svg className="h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 text-sm text-gray-700">
                              Strong past performance in similar subjects (+5%)
                            </div>
                          </li>
                          <li className="flex items-center">
                            <div className="flex-shrink-0">
                              <svg className="h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 text-sm text-gray-700">
                              Planned study hours above average (+3%)
                            </div>
                          </li>
                          <li className="flex items-center">
                            <div className="flex-shrink-0">
                              <svg className="h-5 w-5 text-red-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 text-sm text-gray-700">
                              History of test anxiety (-2%)
                            </div>
                          </li>
                        </ul>
                      </div>
                      
                      <div className="mt-6">
                        <h4 className="font-medium text-indigo-900 mb-2">AI Recommendations</h4>
                        <ul className="space-y-2">
                          <li className="flex items-start">
                            <div className="flex-shrink-0 mt-0.5">
                              <svg className="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 text-sm text-gray-700">
                              Focus more study time on the theoretical aspects which have been challenging in past tests.
                            </div>
                          </li>
                          <li className="flex items-start">
                            <div className="flex-shrink-0 mt-0.5">
                              <svg className="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 text-sm text-gray-700">
                              Consider joining a study group for this subject to improve your understanding through peer learning.
                            </div>
                          </li>
                          <li className="flex items-start">
                            <div className="flex-shrink-0 mt-0.5">
                              <svg className="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                              </svg>
                            </div>
                            <div className="ml-3 text-sm text-gray-700">
                              Implement stress reduction techniques before exams to mitigate test anxiety.
                            </div>
                          </li>
                        </ul>
                      </div>
                    </div>
                  )}
                </div>
                
                <div className="col-span-1">
                  <div className="bg-gray-50 p-6 rounded-lg">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">Past Predictions</h3>
                    <div className="space-y-4">
                      {pastPredictions.map((prediction, index) => (
                        <div key={index} className="bg-white p-4 rounded-lg shadow-sm">
                          <div className="flex justify-between items-center">
                            <div className="font-medium">{prediction.subject}</div>
                            <div className="text-sm text-gray-500">{prediction.time}</div>
                          </div>
                          <div className="mt-2 flex items-center">
                            <div className="text-lg font-bold text-indigo-600">Predicted: {prediction.predicted}</div>
                            <div className={`ml-auto px-2 py-1 ${prediction.success ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'} text-xs rounded-full`}>
                              Actual: {prediction.actual}
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  <div className="mt-6 bg-gray-50 p-6 rounded-lg">
                    <h3 className="text-lg font-medium text-gray-900 mb-4">Prediction Accuracy</h3>
                    <div className="h-48">
                      <canvas ref={accuracyChartRef}></canvas>
                    </div>
                    <div className="mt-4 text-sm text-gray-500 text-center">
                      Our AI prediction system has an average accuracy of 93% within the predicted ranges.
                    </div>
                  </div>
                  
                  <div className="mt-6 bg-indigo-50 p-6 rounded-lg">
                    <h3 className="text-lg font-medium text-indigo-900 mb-4">AI Learning Features</h3>
                    <ul className="space-y-2">
                      <li className="flex items-center">
                        <svg className="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                        </svg>
                        <span className="ml-2 text-gray-700">Smart study recommendations</span>
                      </li>
                      <li className="flex items-center">
                        <svg className="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                        </svg>
                        <span className="ml-2 text-gray-700">Personalized learning paths</span>
                      </li>
                      <li className="flex items-center">
                        <svg className="h-5 w-5 text-indigo-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                        </svg>
                        <span className="ml-2 text-gray-700">Weakness identification</span>
                      </li>
                      <li className="flex items-center">
                        <svg className="h-5 w-5 text-gray-300" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                          <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                        </svg>
                        <span className="ml-2 text-gray-400">Advanced forecasting (coming soon)</span>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </>
  );
}
